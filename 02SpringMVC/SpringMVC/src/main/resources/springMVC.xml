<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描包 -->
    <context:component-scan base-package="com.stanlong"></context:component-scan>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/html/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
       配置视图控制器
        path：设置处理的请求地址
        view-name：设置请求地址所对应的视图名称
    -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/toAdd" view-name="employee_add"></mvc:view-controller>
    <mvc:view-controller path="/file" view-name="file"></mvc:view-controller>

    <!--
        处理静态资源，例如html、js、css、jpg。 若只设置该标签，则只能访问静态资源，其他请求则无法访问
        此时必须设置<mvc:annotation-driven/>解决问题
    -->
    <mvc:default-servlet-handler/>

    <!-- 开启mvc注解驱动。使用了 mvc:view-controller 这个标签后必须配置mvc:annotation-driven， 否则会造成所有的@Controller注解无法解析，导致404错误   -->
    <mvc:annotation-driven />

    <!--配置文件上传解析器，必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>


    <!--    配置拦截器 -->
    <mvc:interceptors>
        <!-- 只配置一个bean， 该拦截器会拦截所有请求 -->
        <!--方式一-->
        <!--<bean class="com.stanlong.interceptor.FirstInterceptor"></bean>-->
        <!--引用手写的拦截器-->
        <!--方式二-->
        <!--<ref bean="firstInterceptor" ></ref>-->
        <!--这两种拦截方式无法配置拦截规则，拦截器对所有的请求都生效-->

        <!--方式三-->
        <!--配置拦截规则-->
        <mvc:interceptor>
            <mvc:mapping path="/*"/> <!--/**拦截所有-->
            <mvc:exclude-mapping path="/"/>
            <ref bean="firstInterceptor"></ref>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>