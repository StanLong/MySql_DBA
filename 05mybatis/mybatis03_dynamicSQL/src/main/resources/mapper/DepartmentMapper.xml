<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stanlong.mybatis.dao.DepartmentMapper">

	

	<select id="getDeptById" resultType="com.stanlong.mybatis.pojo.Department">
		select 
			id
			,dept_name departmentName
		from tbl_dept
		where id = #{id}
	</select>
	
	<!-- collection嵌套结果集的方式，定义关联的集合类型元素的封装规则
	 -->
	<resultMap type="com.stanlong.mybatis.pojo.Department" id="MyDept">
		<id column="did" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<!-- collection 定义集合类型的属性封装 
			ofType:指定集合里面元素的类型
		-->
		<collection property="emps" ofType="com.stanlong.mybatis.pojo.Employee">
			<!-- 定义集合中元素的封装规则 -->
			<id column="eid" property="id"/>
			<result column="last_name" property="lastName"/>
			<result column="email" property="email"/>
			<result column="gender" property="gender"/>
		</collection>
	</resultMap>
	<select id="getDeptByIdPlus" resultMap="MyDept">
		SELECT 
			d.id did
			,d.dept_name
			,e.id eid
			,e.last_name
			,e.gender
			,e.d_id
			,e.email
			,e.gender
		FROM tbl_dept d
		LEFT OUTER JOIN tbl_employee e
		ON d.id = e.d_id
		WHERE d.id=#{id}
	</select>
	
	
	<resultMap type="com.stanlong.mybatis.pojo.Department" id="MyDeptStep">
		<id column="id" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<collection property="emps" 
			select="com.stanlong.mybatis.dao.EmployeeMapperPlus.getEmpsByDeptId"
			column="{deptId=id}"
			fetchType="lazy"></collection>
	</resultMap>
	<select id="getDeptByIdStep" resultMap="MyDeptStep">
		select 
			id
			,dept_name
		from tbl_dept
		where id = #{id}
	</select>
	
	<!-- 扩展：多列值的传递方法
		将多列的值封装成map传递
		column="{key=column1, key2=column2}"
		fetchType="lazy" ：表示使用延迟加载
			- lazy:延迟
			- eager:立即
	 -->
</mapper>