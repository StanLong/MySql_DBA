<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- mybatis可以使用 properties来引入外部的 properties配置文件
		resource : 引入类路径下的资源
		url : 引用网络（磁盘）路径下的资源
	 -->
	<properties resource="conf/dbconfig.properties"></properties>
	
	<!-- 
		settings包含很多重要的设置项
		setting:用来设置每一个设置项
			name:设置项名
			value:设置项值
		mapUnderscoreToCamelCase ：开启驼峰命名。 
			如果数据库对应的字段名是  last_name， 开启驼峰命名后就可以和类中的 lastName映射上，而不用再起别名
	 -->
	<settings>
		<!-- 开启对驼峰命名法的支持 -->
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		<!-- 开启懒加载 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 按需加载 -->
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 开启二级缓存 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	
	<!-- 别名处理器，可以为java类型起别名
		typeAlias 为某一个java类型起别名
		type：指定要起别名的类型的全类名;默认是类名小写
		alias : 指定新别名
		别名不区分大小写
	 -->
	<typeAliases>
		<!-- <typeAlias type="com.stanlong.mybatis.pojo.Employee"/> -->
		<!-- package ： 为某个包下的所有类批量起别名
				name:指定包名（为当前包及下面所有的后代包中的每一个类都起一个别名，默认类名小写）
			批量起别名的情况下如果类名重复可以加在要起别名的类上加 @Alias注解帮助区分别名
		 -->
		<package name="com.stanlong.mybatis.pojo"/>
	</typeAliases>
	
	<!-- 类型处理器 -->
	<!-- <typeHandlers></typeHandlers> -->
	
	<!-- 插件，可拦截四大对象的方法（Executor, ParamterHander, ResultSetHandler, StatementHandler） -->
	<!-- <plugins></plugins> -->
	
	<!-- 
		environments 环境配置信息， mybatis可以配置多种环境信息
			environment 配置具体的环境信息，必须有两个标签
				transactionManager ： 事务管理器，系统提供有两种  type可选 JDBC|MANAGED
					自定义事物管理器需要实现 TransactionFactory接口  type指定为全类名
				dataSource ： 数据源
					type:数据源类型  可选UNPOOLED|POOLED|JNDI
					自定义数据源： 实现 DataSourceFactory接口， type是全类名
			id：当前环境的唯一标识，比如可以指定使用测试库还是开发库
			
	 -->
	<environments default="development">
		<environment id="test">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	
	
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	
	<!-- mysql在移植性方面的支持 ， 支持多数据库厂商
		type : 数据库厂商的标识，mybatis就能根据数据库厂商来执行不同的sql
	-->
	<databaseIdProvider type="DB_VENDOR">
		<!-- 为不同的数据库厂商起别名 -->
		<property name="MySQL" value="mysql"/>
		<property name="Oracle" value="oracle"/>
		<property name="SQL Server" value="sqlserver"/>
	</databaseIdProvider>
	
	<!-- 将sql映射注册到全局配置中 -->
	<mappers>
		<package name="com.taotao.mapper"/>
	</mappers>
</configuration>